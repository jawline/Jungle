/**
 * The Jungle is the master container for the Jungle framework
 * @author Blake Loring
 */

function Jungle(connectionDetails, canvas, logFunction) {

	var parent = this;

	this.log = logFunction;
	this.log("Jungle", "Creating JungleNet");

	this.net = new JungleNet(connectionDetails, this);

	this.log("Jungle", "Initializing stage");
	this.stage = new createjs.Stage(canvas);
	this.stage.mouseEventsEnabled = true;
	
	this.setupMap();
	this.setupUi();

	var lastX = 0.0;
	var lastY = 0.0;
	var mouseDown = false;

	this.stage.onMouseDown = function(evt) {

		lastX = evt.stageX;
		lastY = evt.stageY;

		mouseDown = true;
	}

	this.stage.onMouseUp = function(evt) {

		lastX = evt.stageX;
		lastY = evt.stageY;

		mouseDown = false;
	}

	this.stage.onMouseMove = function(evt) {

		if (mouseDown) {
			
			parent.map.container.x += evt.stageX - lastX;
			parent.map.container.y += evt.stageY - lastY;
		
		}

		lastX = evt.stageX;
		lastY = evt.stageY;

	}

	this.status = new createjs.Text("Connecting");

	this.stage.addChild(this.status);
	var stage = this.stage;

	//Make sure this objects tick function is run repeatedly
	createjs.Ticker.addListener(this);
	createjs.Ticker.useRAF = true;

	//Target is 60FPS
	createjs.Ticker.setFPS(60);
}

/**
 * Function sets up the map container
 */
Jungle.prototype.setupMap = function() {
	
	this.mapContainer = new createjs.Container();
	
}

/**
 * On connection JungleNet callback
 */
Jungle.prototype.connected = function() {
	this.log("Jungle", "Connected");
	this.status.text = "Connected";
}
/**
 * On failure JungleNet callback
 */

Jungle.prototype.failure = function(reason) {
	this.log("Jungle", "Connection failure " + reason);
	this.status.text = "Closed: " + reason;
}
/**
 * On data JungleNet callback
 */

Jungle.prototype.data = function(data) {

	this.log("Jungle", "Received Packet " + data);

	//If it is a chat message print it to the log
	if (data.Command == "Chat") {

		this.log("Chat", data.Data);

	}
}
/**
 * Frame redraw function
 */
Jungle.prototype.draw = function() {

	//Redraw the canvas
	this.stage.update();

}
/**
 * Frame tick function
 */
Jungle.prototype.tick = function() {
	this.draw();
}
